# -*- coding: utf-8 -*-
"""Steganography.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R79iWTIxt4qaY93lQP1E_V4I8M5BVVJB
"""

pip install numpy opencv-python pillow

import cv2
import numpy as np

def message_to_binary(message):
    if isinstance(message, str):
        return ''.join(format(ord(i), '08b') for i in message)
    elif isinstance(message, bytes) or isinstance(message, np.ndarray):
        return ''.join(format(i, '08b') for i in message)
    elif isinstance(message, int):
        return format(message, '08b')
    else:
        raise TypeError("Input type not supported")

def hide_data(image, secret_message):
    binary_secret_msg = message_to_binary(secret_message) + '1111111111111110'  # End delimiter
    data_index = 0
    data_len = len(binary_secret_msg)

    for row in image:
        for pixel in row:
            for channel in range(3):  # RGB Channels
                if data_index < data_len:
                    pixel[channel] = (pixel[channel] & 254) | int(binary_secret_msg[data_index])
                    data_index += 1
                else:
                    return image
    return image

# Load image and encode message
image = cv2.imread('landscape.png')
secret_message = "Dark Matter"
stego_image = hide_data(image, secret_message)
cv2.imwrite('stego_image_with_secret.png', stego_image)
print("Data hidden successfully.")

def binary_to_message(binary_data):
    all_bytes = [binary_data[i: i+8] for i in range(0, len(binary_data), 8)]
    decoded_message = ''.join([chr(int(byte, 2)) for byte in all_bytes])
    return decoded_message.split("1111111111111110")[0]

def extract_data(image):
    binary_data = ''
    for row in image:
        for pixel in row:
            for channel in range(3):  # RGB
                binary_data += str(pixel[channel] & 1)
    return binary_to_message(binary_data)

# Load stego image and decode message
stego_image = cv2.imread('stego_image_with_secret.png')
hidden_message = extract_data(stego_image)
print("Hidden Message:", hidden_message)

